// <auto-generated />
using System;
using CCMERP.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CCMERP.Persistence.Migrations.Transaction
{
    [DbContext(typeof(TransactionDbContext))]
    partial class TransactionDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.4");

            modelBuilder.Entity("CCMERP.Domain.Entities.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address1")
                        .HasColumnType("text");

                    b.Property<string>("Address2")
                        .HasColumnType("text");

                    b.Property<string>("BillingAddress2")
                        .HasColumnType("text");

                    b.Property<string>("BillingAddressAddress1")
                        .HasColumnType("text");

                    b.Property<string>("BillingCity")
                        .HasColumnType("text");

                    b.Property<int>("BillingCountry")
                        .HasColumnType("int");

                    b.Property<string>("BillingState")
                        .HasColumnType("text");

                    b.Property<string>("BillingZipCode")
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<string>("ContactEmail")
                        .HasColumnType("text");

                    b.Property<string>("ContactNumber")
                        .HasColumnType("text");

                    b.Property<string>("ContactPerson")
                        .HasColumnType("text");

                    b.Property<string>("ContactPosition")
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .HasColumnType("text");

                    b.Property<string>("CreatedByProgram")
                        .HasColumnType("text");

                    b.Property<int>("CreatedByUser")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("ExternalReference")
                        .HasColumnType("text");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<int>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedByProgram")
                        .HasColumnType("text");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("ShippingAddress1")
                        .HasColumnType("text");

                    b.Property<string>("ShippingAddress2")
                        .HasColumnType("text");

                    b.Property<string>("ShippingCity")
                        .HasColumnType("text");

                    b.Property<int>("ShippingCountry")
                        .HasColumnType("int");

                    b.Property<string>("ShippingState")
                        .HasColumnType("text");

                    b.Property<string>("ShippingZipCode")
                        .HasColumnType("text");

                    b.Property<string>("State")
                        .HasColumnType("text");

                    b.Property<string>("VatID")
                        .HasColumnType("text");

                    b.Property<string>("ZipCode")
                        .HasColumnType("text");

                    b.HasKey("CustomerID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("CCMERP.Domain.Entities.OrganizationCustomerMapping", b =>
                {
                    b.Property<int>("Org_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<short>("IsActive")
                        .HasColumnType("smallint");

                    b.Property<int>("User_ID")
                        .HasColumnType("int");

                    b.HasKey("Org_ID");

                    b.ToTable("organizationCustomerMappings");
                });
#pragma warning restore 612, 618
        }
    }
}
